default_platform(:android)

ENV['NODE_ENV'] = 'production'

platform :android do
  desc 'Upload a new version'
  lane :upload do
    upload_to_server(
      endPoint: ENV["SERVER_URL"],
      multipartPayload: {
        :fileFormFieldName => 'file'
      }
    )
  end

  desc 'Increment app version'
  lane :version_increment do
    increment_version_code
    git_commit(path: './app/build.gradle', message: 'Version Bump')
  end

  desc 'Print apk size'
  lane :print_apk_size do
    puts("Apk size: #{File.size(lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]) / 1048576}Mb")
  end

  desc 'Build '
  lane :build_apk do
    delete_files(file_pattern: '**/*.apk')
    gradle(
      task: "assembleRelease",
      properties: {
          "android.injected.signing.store.file" => ENV["KEY_STORE_FILE"],
          "android.injected.signing.store.password" => ENV["KEY_PASSWORD"],
          "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
          "android.injected.signing.key.password" => ENV["KEY_PASSWORD"],
      }
    )
    print_apk_size
  end

  desc 'Deploy a new version'
  lane :deploy do
    build_apk
    upload
    print_apk_size
  end
end

platform :web do
  desc 'Upload a new version'
  lane :upload do
    sftp_upload(
      server_url: ENV['SFTP_HOST'],
      server_user: ENV['SFTP_USER'],
      server_port: ENV['SFTP_PORT'],
      server_key: "#{Dir.home}/.ssh/id_rsa",
      target_dir: ENV['SFTP_TARGET'],
      file_paths:["web/dist"],
    )
  end

  desc 'Deploy a new version'
  lane :deploy do
    yarn(
      command: "build",
      package_path: "./web/package.json"
    )
    upload
  end
end
